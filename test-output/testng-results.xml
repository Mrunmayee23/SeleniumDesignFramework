<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="5" passed="4" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2025-04-14T21:27:59 JST" name="Suite" finished-at="2025-04-14T21:28:32 JST" duration-ms="32886">
    <groups>
      <group name="ErrorHandling">
        <method signature="ErrorValidationsTest.loginErrorValidation()[pri:0, instance:automation.test.ErrorValidationsTest@2d96543c]" name="loginErrorValidation" class="automation.test.ErrorValidationsTest"/>
      </group> <!-- ErrorHandling -->
      <group name="Purchase">
        <method signature="SubmitOrderTest.submitOrder(java.util.HashMap)[pri:0, instance:automation.test.SubmitOrderTest@294a6b8e]" name="submitOrder" class="automation.test.SubmitOrderTest"/>
      </group> <!-- Purchase -->
    </groups>
    <test started-at="2025-04-14T21:27:59 JST" name="Error Validation Test" finished-at="2025-04-14T21:28:19 JST" duration-ms="19927">
      <class name="automation.test.ErrorValidationsTest">
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:automation.test.ErrorValidationsTest@2d96543c]" started-at="2025-04-14T21:27:59 JST" name="launchApplication" finished-at="2025-04-14T21:28:05 JST" duration-ms="6264" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="loginErrorValidation()[pri:0, instance:automation.test.ErrorValidationsTest@2d96543c]" started-at="2025-04-14T21:28:05 JST" name="loginErrorValidation" finished-at="2025-04-14T21:28:07 JST" duration-ms="1267" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Incorrect email or password.] but found [Incorrect  or password.]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Incorrect email or password.] but found [Incorrect  or password.]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1590)
at org.testng.Assert.assertEqualsImpl(Assert.java:150)
at org.testng.Assert.assertEquals(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:656)
at org.testng.Assert.assertEquals(Assert.java:666)
at automation.test.ErrorValidationsTest.loginErrorValidation(ErrorValidationsTest.java:15)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:463)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1583)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginErrorValidation -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:automation.test.ErrorValidationsTest@2d96543c]" started-at="2025-04-14T21:28:07 JST" name="tearDown" finished-at="2025-04-14T21:28:07 JST" duration-ms="92" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:automation.test.ErrorValidationsTest@2d96543c]" started-at="2025-04-14T21:28:07 JST" name="launchApplication" finished-at="2025-04-14T21:28:13 JST" duration-ms="6184" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="productErrorValidation()[pri:0, instance:automation.test.ErrorValidationsTest@2d96543c]" started-at="2025-04-14T21:28:13 JST" name="productErrorValidation" finished-at="2025-04-14T21:28:19 JST" duration-ms="5547" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- productErrorValidation -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:automation.test.ErrorValidationsTest@2d96543c]" started-at="2025-04-14T21:28:19 JST" name="tearDown" finished-at="2025-04-14T21:28:19 JST" duration-ms="130" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- automation.test.ErrorValidationsTest -->
    </test> <!-- Error Validation Test -->
    <test started-at="2025-04-14T21:27:59 JST" name="Submit Order Test" finished-at="2025-04-14T21:28:32 JST" duration-ms="32885">
      <class name="automation.test.SubmitOrderTest">
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:automation.test.SubmitOrderTest@294a6b8e]" started-at="2025-04-14T21:27:59 JST" name="launchApplication" finished-at="2025-04-14T21:28:05 JST" duration-ms="5595" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="submitOrder(java.util.HashMap)[pri:0, instance:automation.test.SubmitOrderTest@294a6b8e]" started-at="2025-04-14T21:28:05 JST" name="submitOrder" data-provider="getData" finished-at="2025-04-14T21:28:10 JST" duration-ms="4792" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{password=Sakura@23, email=test.sakura@gmail.com, productName=ZARA COAT 3}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- submitOrder -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:automation.test.SubmitOrderTest@294a6b8e]" started-at="2025-04-14T21:28:10 JST" name="tearDown" finished-at="2025-04-14T21:28:10 JST" duration-ms="113" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:automation.test.SubmitOrderTest@294a6b8e]" started-at="2025-04-14T21:28:10 JST" name="launchApplication" finished-at="2025-04-14T21:28:20 JST" duration-ms="10545" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="submitOrder(java.util.HashMap)[pri:0, instance:automation.test.SubmitOrderTest@294a6b8e]" started-at="2025-04-14T21:28:20 JST" name="submitOrder" data-provider="getData" finished-at="2025-04-14T21:28:26 JST" duration-ms="5157" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{password=Testtaro23, email=taro@gmail.com, productName=ADIDAS ORIGINAL}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- submitOrder -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:automation.test.SubmitOrderTest@294a6b8e]" started-at="2025-04-14T21:28:26 JST" name="tearDown" finished-at="2025-04-14T21:28:26 JST" duration-ms="103" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:automation.test.SubmitOrderTest@294a6b8e]" started-at="2025-04-14T21:28:26 JST" name="launchApplication" finished-at="2025-04-14T21:28:31 JST" duration-ms="5243" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="OrderHistoryTest()[pri:0, instance:automation.test.SubmitOrderTest@294a6b8e]" started-at="2025-04-14T21:28:31 JST" name="OrderHistoryTest" finished-at="2025-04-14T21:28:32 JST" depends-on-methods="automation.test.SubmitOrderTest.submitOrder" duration-ms="892" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- OrderHistoryTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:automation.test.SubmitOrderTest@294a6b8e]" started-at="2025-04-14T21:28:32 JST" name="tearDown" finished-at="2025-04-14T21:28:32 JST" duration-ms="118" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- automation.test.SubmitOrderTest -->
    </test> <!-- Submit Order Test -->
  </suite> <!-- Suite -->
</testng-results>
